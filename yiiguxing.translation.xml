<application>
  <component name="AppStorage">
    <histories>
      <item value="Create drawable from a bitmap, setting initial target density based on the display metrics of the resources." />
      <item value="Initializes local dynamic properties from state. This should be called after significant state changes, e.g. from the One True Constructor and after inflating or applying a theme." />
      <item value="mutate" />
      <item value="portrait" />
      <item value="Only applies if the matrix contains more than just translation." />
      <item value="true if the source should be filtered" />
      <item value="radius" />
      <item value="Blur view with factor" />
      <item value="async" />
      <item value="callback" />
      <item value="Bitmap" />
      <item value="SAMPLING" />
      <item value="If you are using this algorithm in your code please add the following line:" />
      <item value="I called it Stack Blur because this describes best how this filter works internally: it creates a kind of moving stack of colors whilst scanning through the image. Thereby it just has to add one new block of color to the right side of the stack and remove the leftmost color. The remaining colors on the topmost layer of the stack are either added on or reduced by one, depending on if they are on the right or on the left side of the stack." />
      <item value="This is a compromise between Gaussian Blur and Box blur It creates much better looking blurs than Box Blur, but is 7x faster than my Gaussian Blur implementation." />
      <item value="Android port" />
      <item value="Stack Blur Algorithm by Mario Klingemann" />
      <item value="stack" />
      <item value="Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License." />
      <item value="Wasabeef" />
      <item value="天气" />
      <item value="weatcher" />
      <item value="artifacts" />
      <item value="RenderScript artifacts" />
      <item value="以下操作是为了避免边缘出现一些 RenderScript 伪影。" />
      <item value="The following manipulation is to avoid some RenderScript artifacts at the edge." />
      <item value="m Downsample Factor" />
      <item value="ceil" />
      <item value="Manually render this view (and all of its children) to the given Canvas. The view must have already done a full layout before this function is called. When implementing a view, implement {@link onDraw(android.graphics.Canvas)} instead of overriding this method. If you do need to override this method, call the superclass version. @param canvas The Canvas to which the View is rendered." />
      <item value="Sets up this AnimatorSet to play all of the supplied animations at the same time. This is equivalent to calling {@link play(Animator)} with the first animator in the set and then {@link Builderwith(Animator)} with each of the other animators. Note that an Animator with a {@link AnimatorsetStartDelay(long) startDelay} will not actually start until that delay elapses, which means that if the first animator in the list supplied to this constructor has a startDelay, none of the other animators will start until that first animator's startDelay has elapsed. @param items The animations that will be started simultaneously." />
      <item value="Randomly pick a different start in the array of available images." />
      <item value="Demonstrates" />
      <item value="Demonstrates the use of the blurring view." />
      <item value="shuffle" />
      <item value="proposed alternatives" />
      <item value="设置blur Script对象的输入内存" />
      <item value="Fills the bitmap's pixels with the specified {@link Color}." />
      <item value="erase Color" />
      <item value="Script Intrinsic Blur" />
      <item value="Use {@link setBlurredView(android.view.View)} to set up the reference to the view to be blurred." />
      <item value="trigger" />
      <item value="A custom view for presenting a dynamically blurred version of another view's content." />
      <item value="NOTE: Do not place your application dependencies here; they belong in the individual module build.gradle files" />
      <item value="All rights reserved" />
      <item value="条件" />
      <item value="exist" />
      <item value="contains" />
      <item value="include" />
      <item value="不存在" />
      <item value="exclude" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="3253" />
        <entry key="ENGLISH" value="3263" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="9" />
        <entry key="GERMAN" value="3" />
        <entry key="FRENCH" value="13" />
        <entry key="FILIPINO" value="9" />
        <entry key="FINNISH" value="2" />
        <entry key="FRISIAN" value="1" />
        <entry key="DUTCH" value="3" />
        <entry key="CZECH" value="6" />
        <entry key="ROMANIAN" value="9" />
        <entry key="MALAY" value="3" />
        <entry key="ZULU" value="2" />
        <entry key="NEPALI" value="1" />
        <entry key="NORWEGIAN" value="5" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="TURKISH" value="6" />
        <entry key="SPANISH" value="9" />
        <entry key="ITALIAN" value="5" />
        <entry key="HINDI" value="13" />
        <entry key="INDONESIAN" value="14" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1656213039730" />
  </component>
  <component name="Settings">
    <option name="showWordsOnStartup" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>