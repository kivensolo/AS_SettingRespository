<application>
  <component name="AppStorage">
    <histories>
      <item value="George" />
      <item value="disruptive" />
      <item value="By default started services are background, meaning that their process won't be given foreground CPU scheduling" />
      <item value="By default started services are background," />
      <item value="supplying the ongoing notification to be shown to the user while in this state." />
      <item value="hen also make this service run in the foreground," />
      <item value="set Ticker" />
      <item value="ZLog print mirror log failed. Cause mirror log is disable now" />
      <item value="Catch" />
      <item value="Mirror log reading service" />
      <item value="Alive" />
      <item value="conform to rules" />
      <item value="Later the system will try to re-create the service. Because it is in the started state, it will guarantee to call {@link onStartCommand} after creating the new service instance; if there are not any pending start commands to be delivered to the service, it will be called with a null intent object, so you must take care to check for this." />
      <item value="if this service's process is killed while it is started (after returning from {@link onStartCommand}), then leave it in the started state but don't retain this delivered intent." />
      <item value="compatibility version of {@link START_STICKY} that does not guarantee that {@link onStartCommand} will be called again after being killed." />
      <item value="The return value indicates what semantics the system should use for the service's current started state." />
      <item value="Compatibility" />
      <item value="The return value indicates what semantics the system should use for the service's current started state. It may be one of the constants associated with the {@link START_CONTINUATION_MASK} bits." />
      <item value="which the system calls when the IntentService receives a start request." />
      <item value="Redelivery" />
      <item value="If multiple Intents have been sent, only the most recent one is guaranteed to be redelivered." />
      <item value="Sets intent redelivery preferences. Usually called from the constructor with your preferred semantics." />
      <item value="Sets intent redelivery preferences" />
      <item value="This method is invoked on the worker thread with a request to process. Only one Intent is processed at a time, but the processing happens on a worker thread that runs independently from other application logic. So, if this code takes a long time, it will hold up other requests to the same IntentService, but it will not hold up anything else. When all requests have been handled, the IntentService stops itself, so you should not call {@link stopSelf}." />
      <item value="which uses jobs instead of services when running on Android 8.0 or higher." />
      <item value="IntentService is subject" />
      <item value="background execution limits" />
      <item value="imposed with" />
      <item value="imposed with Android 8.0 (API level 26)" />
      <item value="IntentService is subject to all the &lt;a href=&quot;previewfeaturesbackground.html&quot;&gt;background execution limits&lt;a&gt; imposed with Android 8.0 (API level 26)" />
      <item value="IntentService is subject to all the" />
      <item value="All requests are handled on a single worker thread -- they may take as long as necessary (and will not block the application's main loop), but only one request will be processed at a time." />
      <item value="and stop the service as appropriate" />
      <item value="appropriate" />
      <item value="take care of the mechanics." />
      <item value="take care of" />
      <item value="The IntentService class exists to simplify this pattern and take care of the mechanics." />
      <item value="offload" />
      <item value="This &quot;work queue processor&quot; pattern is commonly used to offload tasks from an application's main thread." />
      <item value="pattern" />
      <item value="work queue processor" />
      <item value="the service is started as needed, handles each Intent in turn using a worker thread, and stops itself when it runs out of work." />
      <item value="Work Enqueuer" />
      <item value="If the thread has been started, wait until the looper has been created." />
      <item value="A {@link Thread} that has a {@link Looper}. The {@link Looper} can then be used to create {@link Handler}s. &lt;p&gt;" />
      <item value="m Redelivery" />
      <item value="IntentService will receive the Intents, launch a worker thread, and stop the service as appropriate." />
      <item value="handles each Intent in turn using a worker thread, and stops itself when it runs out of work." />
      <item value="Clients send requests through {@link android.content.ContextstartService(Intent)} calls;" />
      <item value="expressed as" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="3756" />
        <entry key="ENGLISH" value="3751" />
        <entry key="POLISH" value="1" />
        <entry key="AFRIKAANS" value="1" />
        <entry key="DANISH" value="10" />
        <entry key="GERMAN" value="5" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="13" />
        <entry key="FILIPINO" value="9" />
        <entry key="FINNISH" value="2" />
        <entry key="FRISIAN" value="1" />
        <entry key="DUTCH" value="3" />
        <entry key="CZECH" value="6" />
        <entry key="LATIN" value="3" />
        <entry key="ROMANIAN" value="9" />
        <entry key="MARATHI" value="2" />
        <entry key="MALAY" value="3" />
        <entry key="ZULU" value="2" />
        <entry key="NEPALI" value="1" />
        <entry key="NORWEGIAN" value="5" />
        <entry key="PORTUGUESE" value="4" />
        <entry key="TURKISH" value="6" />
        <entry key="SPANISH" value="9" />
        <entry key="HUNGARIAN" value="1" />
        <entry key="ITALIAN" value="5" />
        <entry key="HINDI" value="13" />
        <entry key="INDONESIAN" value="16" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1665404262019" />
  </component>
  <component name="Settings">
    <option name="showWordsOnStartup" value="true" />
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>