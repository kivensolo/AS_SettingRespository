<application>
  <component name="AppStorage">
    <histories>
      <item value="Http task deal in 5000ms" />
      <item value="assert" />
      <item value="Legacy" />
      <item value="disaster" />
      <item value="invocation" />
      <item value="The hierarchy separator for project and task path names." />
      <item value="Configures the build script classpath for this project." />
      <item value="Convention Task" />
      <item value="This method executes the given closure against this project and its sub-projects. The target {@link Project} * is passed to the closure as the closure's delegate." />
      <item value="Configures this project and each of its sub-projects" />
      <item value="the closure to use to configure the dependencies" />
      <item value="Executes the given closure against the {@link DependencyHandler} for * this handler. The {@link DependencyHandler} is passed to the closure as the closure's delegate." />
      <item value="Configures the dependencies for the script" />
      <item value="Size Determiner" />
      <item value="Gallery" />
      <item value="Result Listener" />
      <item value="real" />
      <item value="The default vibration strength of the device." />
      <item value="The strength of the vibration. This must be a value between 1 and 255, or" />
      <item value="amplitude" />
      <item value="Prebaked" />
      <item value="These effects may be any number of things, from single shot vibrations to complex waveforms" />
      <item value="Vibrate constantly for the specified period of time." />
      <item value="Annotation type declaration" />
      <item value="Secondary" />
      <item value="on Secondary Pointer Up" />
      <item value="circle Diameter" />
      <item value="Radial Gradient" />
      <item value="Don't bother getting the parent height if the parent hasn't been laid // out yet." />
      <item value="Maps to ProgressBar.Large style" />
      <item value="Squishes the interpolation curve into the second half of the animation." />
      <item value="Switching" />
      <item value="flod" />
      <item value="flodder" />
      <item value="harmony" />
      <item value="saveFlags see _SAVE_FLAG constants, generally {@link #ALL_SAVE_FLAG} is recommended * for performance reasons." />
      <item value="Saves the current matrix and clip onto a private stack." />
      <item value="Restore the current clip when restore() is called." />
      <item value="flagless" />
      <item value="@deprecated Use the flagless version of {@link #save()}, {@link #saveLayer(RectF, Paint)} or * {@link #saveLayerAlpha(RectF, int)}. For saveLayer() calls the clip * was always restored for {@link #isHardwareAccelerated() Hardware accelerated} * canvases and as of API level {@value Build.VERSION_CODES#O} that is the default * behavior for all canvas types." />
      <item value="mask only can manual operation" />
      <item value="The ready set is an operation set that shows the operations that a * {@code channel} is ready to execute." />
      <item value="An operation set is represented by an integer value" />
      <item value="An operation set is represented by an integer value. The bits of an operation * set represent categories of operations for a key's channel: Accepting socket * connections ({@code OP_ACCEPT}), connecting with a socket ({@code OP_CONNECT}), * reading ({@code OP_READ}) and writing ({@code OP_WRITE})." />
      <item value="The interest set is an operation set that defines the operations that a * {@link SelectableChannel channel} is interested in performing." />
      <item value="Interest set" />
      <item value="Operation set" />
      <item value="represents the relationship between a channel and a * selector for which the channel is registered." />
      <item value="A {@code SelectionKey} represents the relationship between a channel and a * selector for which the channel is registered." />
      <item value="the attached object or {@code null} if no object has been * attached." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="591" />
        <entry key="ENGLISH" value="736" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="6" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="FILIPINO" value="4" />
        <entry key="DUTCH" value="1" />
        <entry key="MALAY" value="2" />
        <entry key="TURKISH" value="3" />
        <entry key="SPANISH" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="4" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="showWordsOnStartup" value="true" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>