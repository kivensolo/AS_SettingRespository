<application>
  <component name="AppStorage">
    <histories>
      <item value="Use Pythagoras to see if drag length is larger than touch slop" />
      <item value="Pythagoras" />
      <item value="The identifier of the pointer to be found" />
      <item value="Active Pointer Id" />
      <item value="Touch Slop" />
      <item value="m Touch Slop" />
      <item value="The outside of the photo has been tapped" />
      <item value="flung" />
      <item value="experiencing" />
      <item value="Interface definition for a callback to be invoked when the target * is experiencing a drag event." />
      <item value="Gesture" />
      <item value="Use other means to handle this functionality. This widget is merely a * simple wrapper around a long-press handler." />
      <item value="ACCURACY" />
      <item value="Gai Ease Cubic Interpolator" />
      <item value="Gai Ease Cubic" />
      <item value="abstract" />
      <item value="Lut In" />
      <item value="Path" />
      <item value="Anticipate" />
      <item value="DEFAULT MID SCALE" />
      <item value="DEFAULT MAX SCALE" />
      <item value="Does the player have this status" />
      <item value="like an Activity in the back stack" />
      <item value="This means that an {@link Observer} can be added in a pair with a {@link LifecycleOwner}, and * this observer will be notified about modifications of the wrapped data only if the paired * LifecycleOwner is in active state. LifecycleOwner is considered as active, if its state is * {@link Lifecycle.State#STARTED} or {@link Lifecycle.State#RESUMED}. An observer added via * {@link #observeForever(Observer)} is considered as always active and thus will be always notified * about modifications. For those observers, you should manually call * {@link #removeObserver(Observer)}." />
      <item value="LiveData is a data holder class that can be observed within a given lifecycle." />
      <item value="plug" />
      <item value="Bound" />
      <item value="Lifecycle Bound Observer" />
      <item value="coopration" />
      <item value="coopration Code" />
      <item value="extend Nearby" />
      <item value="add Ref" />
      <item value="Comments" />
      <item value="注释" />
      <item value="Server Socket" />
      <item value="If the application has specified a server socket factory, that * factory's {@code createSocketImpl} method is called to create * the actual socket implementation. Otherwise a &quot;plain&quot; socket is created." />
      <item value="can" />
      <item value="from" />
      <item value="retrieved" />
      <item value="If a connection * indication arrives when the queue is full, the connection is refused." />
      <item value="The maximum queue length for incoming connection indications (a * request to connect) is set to {@code 50}" />
      <item value="typically from an ephemeral port range." />
      <item value="Creates a server socket, bound to the specified port. A port number * of {@code 0} means that the port number is automatically * allocated" />
      <item value="special case: user's onTick took more than interval to // complete, skip to next interval" />
      <item value="take into account user's onTick taking time to execute" />
      <item value="tick" />
      <item value="Merchant" />
      <item value="buttom" />
      <item value="on Make Emergency Degree" />
      <item value="emargen" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="480" />
        <entry key="ENGLISH" value="628" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="5" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="FILIPINO" value="3" />
        <entry key="DUTCH" value="1" />
        <entry key="MALAY" value="2" />
        <entry key="TURKISH" value="3" />
        <entry key="SPANISH" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="autoPlayTTS" value="true" />
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="showWordsOnStartup" value="true" />
    <option name="translator" value="ai.youdao" />
    <option name="ttsSource" value="TRANSLATION" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>