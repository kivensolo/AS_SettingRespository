<application>
  <component name="AppStorage">
    <histories>
      <item value="The one-stop shop for setting up this {@link TabLayout} with a {@link ViewPager}" />
      <item value="5.0_home carousel" />
      <item value="carousel" />
      <item value="time Up" />
      <item value="Handler to assign to the returned Message object's &lt;em&gt;target&lt;/em&gt; member" />
      <item value="Cache is valid until revision(versionCode) changed" />
      <item value="secondary Hash" />
      <item value="spread" />
      <item value="Absent" />
      <item value="only If Absent" />
      <item value="Segment" />
      <item value="Segments are specialized versions of hash tables. This * subclasses from ReentrantLock opportunistically, just to * simplify some locking and avoid separate construction." />
      <item value="this way we can find the .aar file in libs folder" />
      <item value="java.lang.IllegalArgumentException: Parameter specified as non-null is null: method kotlin.jvm.internal.Intrinsics.checkParameterIsNotNul" />
      <item value="vary" />
      <item value="acquire" />
      <item value="A responsibility of an implementation of this interface is to retain owned ViewModelStore * during the configuration changes and call {@link ViewModelStore#clear()}, when this scope is * going to be destroyed." />
      <item value="A scope that owns {@link ViewModelStore}." />
      <item value="is Assignable From" />
      <item value="Mutable" />
      <item value="Mediator" />
      <item value="Internal class that can receive any lifecycle change and dispatch it to the receiver" />
      <item value="An {@link BitmapPool BitmapPool} implementation * that rejects all {@link Bitmap Bitmap}s added to it and always returns {@code * null} from get" />
      <item value="Reduces the size of the cache by evicting items based on the given level." />
      <item value="Identical to {@link #get(int, int, Bitmap.Config)} except that any returned * {@link Bitmap} may &lt;em&gt;not&lt;/em&gt; have been erased and may contain random data." />
      <item value="Returns a {@link Bitmap} of exactly the given width, height, and * configuration, and containing only transparent pixels." />
      <item value="Adds the given {@link Bitmap} if it is eligible to be re-used and the pool * can fit it, or calls {@link Bitmap#recycle()} on the Bitmap and discards it." />
      <item value="The size multiplier to apply between 0 and 1" />
      <item value="size Multiplier" />
      <item value="Multiplies the initial size of the pool by the given multiplier to dynamically and * synchronously allow users to adjust the size of the pool" />
      <item value="Returns the current maximum size of the pool in bytes" />
      <item value="An interface for a pool that allows users to reuse {@link Bitmap} objects" />
      <item value="The default strategy, currently" />
      <item value="A strategy for handling unexpected and uncaught {@link Throwable}s thrown by futures run on the * pool." />
      <item value="A RequestManager for the top level application that can be used to start a load." />
      <item value="Any context, will not be retained" />
      <item value="The entry point for interacting with Glide for Applications" />
      <item value="A generic class that can handle setting options and staring loads for generic resource types" />
      <item value="lazily becomes a new Rect()" />
      <item value="which draws multiple underlying * drawables on top of each other." />
      <item value="a compound drawable" />
      <item value="the simplest Drawable, a PNG or JPEG image" />
      <item value="Though usually not visible to the application, Drawables may take a variety * of forms:" />
      <item value="Drawable provides a number of generic * mechanisms for its client to interact with what is being drawn" />
      <item value="In addition to simple drawing" />
      <item value="facility" />
      <item value="any facility" />
      <item value="Drawable does not have any facility" />
      <item value="a Drawable does not have any facility to * receive events or otherwise interact with the user" />
      <item value="underlying" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="189" />
        <entry key="ENGLISH" value="190" />
        <entry key="CHINESE_TRADITIONAL" value="7" />
        <entry key="ESTONIAN" value="1" />
        <entry key="BOSNIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="ESPERANTO" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="primaryFontFamily" value="Yu Gothic UI" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>