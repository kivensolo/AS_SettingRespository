<application>
  <component name="AppStorage">
    <histories>
      <item value="fallback To Destructive Migration" />
      <item value="Allows Room to destructively recreate database tables if {@link Migration}s that would * migrate old database schemas to the latest schema version are not found. * &lt;p&gt;" />
      <item value="Asserts that we are not on the main thread." />
      <item value="Disables the main thread query check for Room." />
      <item value="Room ensures that Database is never accessed on the main thread because it may lock the * main thread and trigger an ANR. If you need to access the database from the main thread, * you should always use async alternatives or manually move the call to a background * thread." />
      <item value="It is recommended to have multiple {@code Dao} classes in your codebase depending on the tables * they touch." />
      <item value="An abstract {@code @Dao} class can optionally have a constructor that takes a {@link Database} * as its only parameter." />
      <item value="At compile * time, Room will generate an implementation of this class when it is referenced by a * {@link Database}." />
      <item value="The class marked with {@code @Dao} should either be an interface or an abstract class." />
      <item value="Data Access Objects are the main classes where you define your database interactions. They can * include a variety of query methods." />
      <item value="Instead of running queries on the database directly" />
      <item value="implementation" />
      <item value="receive" />
      <item value="You can receive an implementation of the class via" />
      <item value="Can be empty if the class has a field annotated * with {@link PrimaryKey}" />
      <item value="If a field is {@code transient}, it is automatically ignored &lt;b&gt;unless&lt;/b&gt; it is annotated with * {@link ColumnInfo}, {@link Embedded} or {@link Relation}" />
      <item value="If a field is {@code transient}, it is automatically ignored &lt;b&gt;unless&lt;/b&gt; it is annotated with * {@link ColumnInfo}, {@link Embedded} or {@link Relation}." />
      <item value="When a class is marked as an Entity, all of its fields are persisted. If you would like to * exclude some of its fields, you can mark them with {@link Ignore}" />
      <item value="When a class is marked as an Entity, all of its fields are persisted" />
      <item value="persisted" />
      <item value="Constructor does not have to receive all fields as parameters * but if a field is not passed into the constructor, it should either be public or have a public * setter. If a matching constructor is available, Room will always use it. If you don't want it * to use a constructor, you can annotate it with {@link Ignore}" />
      <item value="Each entity must either have a no-arg constructor or a constructor whose parameters match * fields (based on type and name)" />
      <item value="primary key" />
      <item value="This class will have a mapping SQLite table in the database" />
      <item value="Marks a class as an entity. This class will have a mapping SQLite table in the database." />
      <item value="The list of entities included in the database. Each entity turns into a table in the * database." />
      <item value="initialize With Defaults" />
      <item value="Stetho" />
      <item value="The * service should clean up any resources it holds (threads, registered * receivers, etc) at this point" />
      <item value="Called by the system to notify a Service that it is no longer used and is being removed" />
      <item value="subhead" />
      <item value="crosshead" />
      <item value="Brand" />
      <item value="Deal Data" />
      <item value="recycle inner" />
      <item value="MULTIPLE" />
      <item value="sync" />
      <item value="The factor by which playback will be sped up. Must be greater than zero" />
      <item value="The factor by which the audio pitch will be scaled. Must be greater than zero" />
      <item value="If {@code false}, then at least one of the following is true" />
      <item value="Returns whether the player is playing, i.e. {@link #getContentPosition()} is advancing. * * &lt;p&gt;If {@code false}, then at least one of the following is true:" />
      <item value="&gt;There is no {@link #getPlayWhenReady() intention to play" />
      <item value="Simple Transform Animation" />
      <item value="Quiver Animation" />
      <item value="It will never change from this size." />
      <item value="surface Redraw Needed Async" />
      <item value="The SurfaceHolder whose surface has changed." />
      <item value="surface Redraw Needed" />
      <item value="Additional callbacks that can be received for {@link Callback}." />
      <item value="bulk" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="60" />
        <entry key="ENGLISH" value="134" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="autoPlayTTS" value="true" />
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="ttsSource" value="TRANSLATION" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="appKeyConfigured" value="true" />
        <option name="primaryLanguage" value="ENGLISH" />
      </youdao-translate>
    </option>
  </component>
</application>