<application>
  <component name="AppStorage">
    <histories>
      <item value="The {@code Fragment} support library adds 100k of binary size to an app, and full-Flutter * apps do not otherwise require that binary hit. Therefore, it was concluded that Flutter * must provide a {@link FlutterActivity} based on the AOSP {@code Activity}, and an independent * {@link FlutterFragment} for add-to-app developers." />
      <item value="One might ask why an {@code Activity} and {@code Fragment} delegate needs to exist. Given * that a {@code Fragment} can be placed within an {@code Activity}, it would make more sense * to use a {@link FlutterFragment} within a {@link FlutterActivity}." />
      <item value="No preferred FlutterEngine was provided" />
      <item value="INCREMENT" />
      <item value="Skim Over" />
      <item value="instantiate" />
      <item value="Could not find method onClick(View) in a parent or ancestor Context for android:onClick attribute defined on view class" />
      <item value="ancestor" />
      <item value="Color Flip" />
      <item value="where each element is calculated by calling the specified * [init] function." />
      <item value="The function [init] is called for each array element sequentially starting from the first one. * It should return the value for an array element given its index." />
      <item value="Rfactor in 2020/2/15 with kotlin" />
      <item value="portrait" />
      <item value="Minimum velocity to initiate a fling, as measured in pixels per second" />
      <item value="Minimum velocity to initiate a fling, as measured in pixels per second." />
      <item value="Retrieve the last computed X velocity" />
      <item value="A value of 1 * provides pixels per millisecond, 1000 provides pixels per second" />
      <item value="Velocity Tracker" />
      <item value="1000 provides pixels per second" />
      <item value="The units you would like the velocity in" />
      <item value="Velocity" />
      <item value="Could not determine the class-path for interface com.android.builder.model.AndroidProject." />
      <item value="invoke" />
      <item value="Do not pass a resource ID" />
      <item value="Carousel" />
      <item value="kotlin.UninitializedPropertyAccessException: lateinit property mPresenter has not been initialized" />
      <item value="The one-stop shop for setting up this {@link TabLayout} with a {@link ViewPager}" />
      <item value="5.0_home carousel" />
      <item value="carousel" />
      <item value="time Up" />
      <item value="Handler to assign to the returned Message object's &lt;em&gt;target&lt;/em&gt; member" />
      <item value="Cache is valid until revision(versionCode) changed" />
      <item value="secondary Hash" />
      <item value="spread" />
      <item value="Absent" />
      <item value="only If Absent" />
      <item value="Segment" />
      <item value="Segments are specialized versions of hash tables. This * subclasses from ReentrantLock opportunistically, just to * simplify some locking and avoid separate construction." />
      <item value="this way we can find the .aar file in libs folder" />
      <item value="java.lang.IllegalArgumentException: Parameter specified as non-null is null: method kotlin.jvm.internal.Intrinsics.checkParameterIsNotNul" />
      <item value="vary" />
      <item value="acquire" />
      <item value="A responsibility of an implementation of this interface is to retain owned ViewModelStore * during the configuration changes and call {@link ViewModelStore#clear()}, when this scope is * going to be destroyed." />
      <item value="A scope that owns {@link ViewModelStore}." />
      <item value="is Assignable From" />
      <item value="Mutable" />
      <item value="Mediator" />
      <item value="Internal class that can receive any lifecycle change and dispatch it to the receiver" />
      <item value="An {@link BitmapPool BitmapPool} implementation * that rejects all {@link Bitmap Bitmap}s added to it and always returns {@code * null} from get" />
      <item value="Reduces the size of the cache by evicting items based on the given level." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="217" />
        <entry key="ENGLISH" value="218" />
        <entry key="CHINESE_TRADITIONAL" value="7" />
        <entry key="ESTONIAN" value="1" />
        <entry key="BOSNIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="ESPERANTO" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="primaryFontFamily" value="Yu Gothic UI" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>