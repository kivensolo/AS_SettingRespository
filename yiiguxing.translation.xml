<application>
  <component name="AppStorage">
    <histories>
      <item value="Uncaught exceptions in this coroutine cancel the parent job in the context by default * (unless [CoroutineExceptionHandler] is explicitly specified), which means that when `launch` is used with * the context of another coroutine, then any uncaught exception leads to the cancellation of the parent coroutine." />
      <item value="In this case, * the coroutine [Job] is created in _new_ state. It can be explicitly started with [start][Job.start] function * and will be started implicitly on the first invocation of [join][Job.join]." />
      <item value="An optional [start] parameter can be set to [CoroutineStart.LAZY] to start coroutine _lazily_" />
      <item value="By default, the coroutine is immediately scheduled for execution." />
      <item value="By default, the coroutine is immediately scheduled for execution. * Other start options can be specified via `start` parameter. See [CoroutineStart] for details. * An optional [start] parameter can be set to [CoroutineStart.LAZY] to start coroutine _lazily_. In this case, * the coroutine [Job] is created in _new_ state. It can be explicitly started with [start][Job.start] function * and will be started implicitly on the first invocation of [join][Job.join]." />
      <item value="but it can also be overridden * with a corresponding [coroutineContext] element." />
      <item value="The coroutine context is inherited from a [CoroutineScope]. Additional context elements can be specified with [context] argument. * If the context does not have any dispatcher nor any other [ContinuationInterceptor], then [Dispatchers.Default] is used. * The parent job is inherited from a [CoroutineScope] as well, but it can also be overridden * with a corresponding [coroutineContext] element." />
      <item value="The coroutine context is inherited from a [CoroutineScope]" />
      <item value="Launches a new coroutine without blocking the current thread and returns a reference to the coroutine as a [Job]. * The coroutine is cancelled when the resulting job is [cancelled][Job.cancel]." />
      <item value="invoked in the context of the provided scope" />
      <item value="he coroutine code" />
      <item value="the coroutine code which will be invoked in the context of the provided scope" />
      <item value="coroutine start option. The default value is [CoroutineStart.DEFAULT]." />
      <item value="additional to [CoroutineScope.coroutineContext] context of the coroutine" />
      <item value="The context of this scope." />
      <item value="顺序" />
      <item value="根据频道号进行频道数据排序" />
      <item value="进行频道数据排序" />
      <item value="inclusive" />
      <item value="Tells whether or not this key is valid." />
      <item value="mileage" />
      <item value="Different case" />
      <item value="is Space" />
      <item value="Create a file if it doesn't exist, otherwise delete old file before creating" />
      <item value="create File By Delete Old File" />
      <item value="file name" />
      <item value="type of MIME" />
      <item value="检测指定文件的MIME类型" />
      <item value="Output stream that we send the response to" />
      <item value="Read HTTP headers and parse out the route" />
      <item value="bootstrap" />
      <item value="Mutable" />
      <item value="Indicates whether this View is currently in edit mode. A View is usually * in edit mode when displayed within a developer tool. For instance, if * this View is being drawn by a visual user interface builder, this method * should return true. * * Subclasses should check the return value of this method to provide * different behaviors if their normal behavior might interfere with the * host environment. For instance: the class spawns a thread in its * constructor, the drawing code relies on device-specific features, etc. * * This method is usually checked in the drawing code of custom widgets. * * @return True if this View is in edit mode, false otherwise." />
      <item value="Footer" />
      <item value="Contract" />
      <item value="在数据异常情况下显示错误提示框" />
      <item value="channel" />
      <item value="Channle" />
      <item value="Clause" />
      <item value="failure" />
      <item value="Day Night" />
      <item value="ADJUST RAISE" />
      <item value="ADJUST LOWER" />
      <item value="ADJUST SAME" />
      <item value="The direction to adjust the volume" />
      <item value="The audio stream for music playback" />
      <item value="Decrease the ringer volume." />
      <item value="The stream type to adjust." />
      <item value="减少媒体音量" />
      <item value="减少" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="703" />
        <entry key="ENGLISH" value="840" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="6" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="FILIPINO" value="4" />
        <entry key="DUTCH" value="1" />
        <entry key="MALAY" value="2" />
        <entry key="TURKISH" value="4" />
        <entry key="SPANISH" value="4" />
        <entry key="ITALIAN" value="1" />
        <entry key="HINDI" value="2" />
        <entry key="INDONESIAN" value="5" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="showWordsOnStartup" value="true" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>