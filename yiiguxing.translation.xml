<application>
  <component name="AppStorage">
    <histories>
      <item value="A LayoutManager wishing to keep focused views aligned in a specific * portion of the view may implement that behavior in an override of this method." />
      <item value="Called when a descendant view of the RecyclerView requests focus" />
      <item value="Circular Reveal" />
      <item value="present" />
      <item value="The visual z position of this view" />
      <item value="This callback will also be called if visible item range changes after a layout * calculation. In that case, dx and dy will be 0." />
      <item value="Callback method to be invoked when the RecyclerView has been scrolled" />
      <item value="This will be * called after the scroll has completed." />
      <item value="FOREVER NS" />
      <item value="The RecyclerView is currently animating to a final position while not under * outside control." />
      <item value="dragged" />
      <item value="The RecyclerView is currently being dragged by outside input such as user touch input" />
      <item value="The RecyclerView is not currently scrolling" />
      <item value="An OnScrollListener can be added to a RecyclerView to receive messages when a scrolling event * has occurred on that RecyclerView" />
      <item value="individual" />
      <item value="readLock() can be work with flush progress in the same time" />
      <item value="This is the class for text whose content is immutable but to which * markup objects can be attached and detached." />
      <item value="will skip focus dispatch and its all children" />
      <item value="assistant thread" />
      <item value="assistant" />
      <item value="Blend Mode" />
      <item value="Call this when something has changed which has invalidated the * layout of this view. This will schedule a layout pass of the view * tree." />
      <item value="artifacts" />
      <item value="@deprecated Use {@link #getArchiveClassifier()}" />
      <item value="Sets the classifier" />
      <item value="strictly" />
      <item value="If you want to append additional elements to the main scope, use [CoroutineScope.plus] operator: * `val scope = MainScope() + CoroutineName(&quot;MyActivity&quot;)`." />
      <item value="context elements" />
      <item value="The resulting scope has [SupervisorJob] and [Dispatchers.Main] context elements" />
      <item value="Creates the main [CoroutineScope] for UI components." />
      <item value="Convenience method to scroll to a certain position" />
      <item value="Convenience" />
      <item value="get Unfiltered Child Count" />
      <item value="By convention" />
      <item value="convention" />
      <item value="Every coroutine builder" />
      <item value="to enforce structured concurrency" />
      <item value="enforce" />
      <item value="implementation by delegation should be preferred instead" />
      <item value="The best ways to obtain a standalone instance of the scope are [CoroutineScope()] and [MainScope()] factory functions" />
      <item value="to automatically propagate both context elements and cancellation" />
      <item value="inherits" />
      <item value="Defines a scope for new coroutines" />
      <item value="If you want to append additional elements to the main scope, use [CoroutineScope.plus] operator:" />
      <item value="he resulting scope has [SupervisorJob] and [Dispatchers.Main] context elements" />
      <item value="Creates the main [CoroutineScope] for UI components" />
      <item value="Coroutine Scope" />
      <item value="INSTALL FAILED SHARED USER INCOMPATIBLE" />
      <item value="ironman" />
      <item value="&quot;Repeat All&quot; mode to repeat the entire timeline infinitely" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="717" />
        <entry key="ENGLISH" value="704" />
        <entry key="CHINESE_TRADITIONAL" value="7" />
        <entry key="ESTONIAN" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="BOSNIAN" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="MALAY" value="6" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="ESPERANTO" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="primaryFontFamily" value="Yu Gothic UI" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
      </youdao-translate>
    </option>
  </component>
</application>