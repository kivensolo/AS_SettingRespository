<application>
  <component name="AppStorage">
    <histories>
      <item value="A RequestManager for the top level application that can be used to start a load." />
      <item value="Any context, will not be retained" />
      <item value="The entry point for interacting with Glide for Applications" />
      <item value="A generic class that can handle setting options and staring loads for generic resource types" />
      <item value="lazily becomes a new Rect()" />
      <item value="which draws multiple underlying * drawables on top of each other." />
      <item value="a compound drawable" />
      <item value="the simplest Drawable, a PNG or JPEG image" />
      <item value="Though usually not visible to the application, Drawables may take a variety * of forms:" />
      <item value="Drawable provides a number of generic * mechanisms for its client to interact with what is being drawn" />
      <item value="In addition to simple drawing" />
      <item value="facility" />
      <item value="any facility" />
      <item value="Drawable does not have any facility" />
      <item value="a Drawable does not have any facility to * receive events or otherwise interact with the user" />
      <item value="underlying" />
      <item value="generic" />
      <item value="A Drawable is a general abstraction for &quot;something that can be drawn.&quot;" />
      <item value="@return A new request builder for loading a {@link Drawable} using the given model." />
      <item value="Equivalent to" />
      <item value="Factor out this Glide.get() call." />
      <item value="retrieving" />
      <item value="* A collection of static methods for creating new {@link com.bumptech.glide.RequestManager}s or * retrieving existing ones from activities and fragment." />
      <item value="Internal method" />
      <item value="assertions" />
      <item value="Preconditions" />
      <item value="but in practice it will // only occur due to errors with the Fragment lifecycle" />
      <item value="in practice" />
      <item value="Retriever" />
      <item value="get Retriever" />
      <item value="Overrides the {@link com.bumptech.glide.request.target.Target}'s width and height with the * given size." />
      <item value="with" />
      <item value="A singleton to present a simple static interface" />
      <item value="Tries to intelligently choose a strategy based on the data source" />
      <item value="Caches remote data with both {@link #DATA} and {@link #RESOURCE}, and local data with * {@link #RESOURCE} only." />
      <item value="if this request should attempt to decode cached source data." />
      <item value="Returns true if this request should attempt to decode cached source data" />
      <item value="Returns true if this request should attempt to decode cached resource data." />
      <item value="Set of available caching strategies for media" />
      <item value="Writes resources to disk after they've been decoded." />
      <item value="Writes retrieved data directly to the disk cache before it's decoded." />
      <item value="restore" />
      <item value="Get a View that displays the data at the specified position in the data set. You can either * create a View manually or inflate it from an XML layout file. When the View is inflated, the * parent View (GridView, ListView...) will apply default layout parameters unless you use * {@link android.view.LayoutInflater#inflate(int, android.view.ViewGroup, boolean)} * to specify a root view and to prevent attachment to the root." />
      <item value="The position of the item within the adapter's data set of the item whose view we want." />
      <item value="The position of the item within the adapter's data set of the item whose view * we want." />
      <item value="The old view to reuse, if possible" />
      <item value="The old view to reuse" />
      <item value="The parent that this view will eventually be attached to" />
      <item value="Canvas: trying to use a recycled bitmap android.graphics.Bitmap" />
      <item value="Set the blur radius" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="155" />
        <entry key="ENGLISH" value="156" />
        <entry key="CHINESE_TRADITIONAL" value="7" />
        <entry key="ESTONIAN" value="1" />
        <entry key="BOSNIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="ESPERANTO" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="primaryFontFamily" value="Yu Gothic UI" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>