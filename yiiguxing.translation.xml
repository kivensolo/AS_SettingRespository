<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="596" />
    <option name="newTranslationDialogX" value="3695" />
    <option name="newTranslationDialogY" value="457" />
    <histories>
      <item value="Image Composer" />
      <item value="Composer" />
      <item value="wait For Existing Or Start New Job" />
      <item value="Determines the size of the view by first checking {@link android.view.ViewgetWidth()} and {@link android.view.ViewgetHeight()}. If one or both are zero, it then checks the view's {@link LayoutParams}. If one or both of the params width and height are less than or equal to zero, it then adds an {@link android.view.ViewTreeObserver.OnPreDrawListener} which waits until the view has been measured before calling the callback with the view's drawn width and height." />
      <item value="Determines the size of the view by first checking {@link android.view.ViewgetWidth()} and {@link android.view.ViewgetHeight()}. If one or both are zero, it then checks the view's {@link LayoutParams}." />
      <item value="Prevents any bitmaps being loaded from previous requests, releases any resources held by this request, displays the current placeholder if one was provided, and marks the request as having been cancelled." />
      <item value="Stops any in progress requests" />
      <item value="A class for managing and starting requests for Glide." />
      <item value="A class for managing and starting requests for Glide. Can use activity, fragment and connectivity lifecycle events to intelligently stop, start, and restart requests. Retrieve either by instantiating a new object, or to take advantage built in Activity and Fragment lifecycle handling, use the static Glide.load methods with your Fragment or Activity." />
      <item value="loads a resource for an {@link com.bumptech.glide.request.target.Target}" />
      <item value="Retrieves the current request for this target, should not be called outside of Glide." />
      <item value="The type of resource the target can display" />
      <item value="An interface that Glide can load a resource into and notify of relevant lifecycle events during a load." />
      <item value="relevant" />
      <item value="Set the target the resource will be loaded into" />
      <item value="loads a resource for an" />
      <item value="A request that loads a resource for an {@link com.bumptech.glide.request.target.Target}." />
      <item value="is Equivalent To" />
      <item value="build Request Recursive" />
      <item value="Gaussian Blur" />
      <item value="百" />
      <item value="Downsample" />
      <item value="Canvas and Drawables" />
      <item value="primitive" />
      <item value="a drawing primitive" />
      <item value="Construct an empty raster canvas." />
      <item value="Construct an empty raster canvas" />
      <item value="Specifies a mutable bitmap for the canvas to draw into" />
      <item value="The initial target density of the canvas is the same as the given bitmap's density." />
      <item value="Construct a canvas with the specified bitmap to draw into. The bitmap must be mutable." />
      <item value="to the given Canvas" />
      <item value="and all of its children" />
      <item value="Manually render this view" />
      <item value="artifacts" />
      <item value="RenderScript artifacts" />
      <item value="以下操作是为了避免边缘出现一些 RenderScript 伪影。" />
      <item value="The following manipulation is to avoid some RenderScript artifacts at the edge." />
      <item value="m Downsample Factor" />
      <item value="ceil" />
      <item value="Manually render this view (and all of its children) to the given Canvas. The view must have already done a full layout before this function is called. When implementing a view, implement {@link onDraw(android.graphics.Canvas)} instead of overriding this method. If you do need to override this method, call the superclass version. @param canvas The Canvas to which the View is rendered." />
      <item value="Sets up this AnimatorSet to play all of the supplied animations at the same time. This is equivalent to calling {@link play(Animator)} with the first animator in the set and then {@link Builderwith(Animator)} with each of the other animators. Note that an Animator with a {@link AnimatorsetStartDelay(long) startDelay} will not actually start until that delay elapses, which means that if the first animator in the list supplied to this constructor has a startDelay, none of the other animators will start until that first animator's startDelay has elapsed. @param items The animations that will be started simultaneously." />
      <item value="Randomly pick a different start in the array of available images." />
      <item value="Demonstrates" />
      <item value="Demonstrates the use of the blurring view." />
      <item value="shuffle" />
      <item value="proposed alternatives" />
      <item value="设置blur Script对象的输入内存" />
      <item value="Fills the bitmap's pixels with the specified {@link Color}." />
      <item value="erase Color" />
      <item value="Script Intrinsic Blur" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="3266" />
        <entry key="ENGLISH" value="3276" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="9" />
        <entry key="GERMAN" value="3" />
        <entry key="FRENCH" value="13" />
        <entry key="FILIPINO" value="9" />
        <entry key="FINNISH" value="2" />
        <entry key="FRISIAN" value="1" />
        <entry key="DUTCH" value="3" />
        <entry key="CZECH" value="6" />
        <entry key="ROMANIAN" value="9" />
        <entry key="MALAY" value="3" />
        <entry key="NORWEGIAN" value="5" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="TURKISH" value="6" />
        <entry key="SPANISH" value="9" />
        <entry key="ITALIAN" value="5" />
        <entry key="HINDI" value="13" />
        <entry key="INDONESIAN" value="14" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1656211826386" />
  </component>
  <component name="Settings">
    <option name="showWordsOnStartup" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>