<application>
  <component name="AppStorage">
    <histories>
      <item value="The headers fragment is enabled and shown by default" />
      <item value="Both background colors should be set because the view's background is temporarily visible // during animations." />
      <item value="during animations." />
      <item value="entity" />
      <item value="Movie class represents video entity with title" />
      <item value="dynamic interface" />
      <item value="A trivial Presenter that takes a string and renders it into a" />
      <item value="such as references to child views to be used when * binding to avoid expensive calls to" />
      <item value="view state information" />
      <item value="typically extend" />
      <item value="refers to" />
      <item value="The leanback framework implements the adapter concept using * {@link ObjectAdapter} which refers to a Presenter (or {@link PresenterSelector}) instance." />
      <item value="concept" />
      <item value="on *" />
      <item value="demand" />
      <item value="alignment" />
      <item value="Facet" />
      <item value="Supported facets" />
      <item value="In addition to view creation and binding" />
      <item value="A trivial Presenter that takes a string and renders it" />
      <item value="trivial" />
      <item value="A trivial Presenter that takes a string and renders it into a {@link * android.widget.TextView TextView}:" />
      <item value="expensive" />
      <item value="typically" />
      <item value="stateless" />
      <item value="but is * not position-based" />
      <item value="position-based" />
      <item value="studio" />
      <item value="Praesent viverra bibendum semper" />
      <item value="Fusce id nisi turpis" />
      <item value="Google Demo Slam_ 20ft Search" />
      <item value="fast Lane" />
      <item value="set fastLane (or headers) background color" />
      <item value="search Affordance Color" />
      <item value="brand Color" />
      <item value="Loads a grid of cards with movies to browse" />
      <item value="Death Recipient" />
      <item value="recipient" />
      <item value="Register the recipient for a notification if this binder * goes away. If this binder object unexpectedly goes away * (typically because its hosting process has been killed), * then the given {@link DeathRecipient}'s * {@link DeathRecipient#binderDied DeathRecipient.binderDied()} method * will be called." />
      <item value="Binder invocation to an incorrect interface" />
      <item value="explicit" />
      <item value="Retrieve the Binder object associated with this interface. * You must use this instead of a plain cast, so that proxy objects * can return the correct result." />
      <item value="sikai" />
      <item value="View Property Animator" />
      <item value="The value to be animated to" />
      <item value="was suspected to be a leaked instance" />
      <item value="The value in pixels that should be added to each line other than the last line. * This will be applied after the multiplier" />
      <item value="The value by which each line height other than the last line will be multiplied * by" />
      <item value="complex unit: Value is a scaled pixel" />
      <item value="Interval" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="431" />
        <entry key="ENGLISH" value="422" />
        <entry key="CHINESE_TRADITIONAL" value="7" />
        <entry key="ESTONIAN" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="BOSNIAN" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="MALAY" value="3" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="ESPERANTO" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="primaryFontFamily" value="Yu Gothic UI" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>