<application>
  <component name="AppStorage">
    <histories>
      <item value="The id of an anchor view that this view should position relative to" />
      <item value="The class name of a Behavior class defining special runtime behavior for this child view." />
      <item value="Specifies how an object should position relative to an anchor, on both the X and Y axes, within its parent's bounds." />
      <item value="Children can specify {@link LayoutParams#insetEdge} to describe how the * view insets the CoordinatorLayout. Any child views which are set to dodge the same inset edges by * {@link LayoutParams#dodgeInsetEdges} will be moved appropriately so that the * views do not overlap" />
      <item value="This view id must correspond * to an arbitrary descendant of the CoordinatorLayout, but it may not be the anchored child itself * or a descendant of the anchored child. This can be used to place floating views relative to * other arbitrary content panes.&lt;/p&gt;" />
      <item value="Children of a CoordinatorLayout may have an * {@link LayoutParams#setAnchorId(int) anchor}." />
      <item value="Behaviors may be used to implement a variety of interactions and additional layout * modifications ranging from sliding drawers and panels to swipe-dismissable elements and buttons * that stick to other elements as they move and animate." />
      <item value="By specifying {@link Behavior Behaviors} for child views of a * CoordinatorLayout you can provide many different interactions within a single parent and those * views can also interact with one another. View classes can specify a default behavior when * used as a child of a CoordinatorLayout using the * {@link DefaultBehavior} annotation.&lt;/p&gt;" />
      <item value="As a container for a specific interaction with one or more child views" />
      <item value="As a top-level application decor or chrome layout" />
      <item value="CoordinatorLayout is intended for two primary use cases:" />
      <item value="Elevation for the action bar itself" />
      <item value="simulate" />
      <item value="blend ARGB" />
      <item value="Or, if you prefer, you can continue to check for errors in release builds," />
      <item value="To proceed, either fix the issues identified by lint, or modify your build script as follows:" />
      <item value="on Destroy View" />
      <item value="@deprecated If you are manually calling this method, use * {@link FragmentTransaction#setMaxLifecycle(Fragment, Lifecycle.State)} instead. If * overriding this method, behavior implemented when passing in &lt;code&gt;true&lt;/code&gt; should be * moved to {@link Fragment#onResume()}, and behavior implemented when passing in * &lt;code&gt;false&lt;/code&gt; should be moved to {@link Fragment#onPause()}." />
      <item value="If you are manually calling this method" />
      <item value="FLAG APPEARED IN PRE LAYOUT" />
      <item value="Release To Refresh" />
      <item value="Pull Down" />
      <item value="This method will animate the button hide if the view has already been laid out." />
      <item value="Hides the button." />
      <item value="dodge Inset Edges" />
      <item value="Get the behavior governing the layout and interaction of the child view within * a parent CoordinatorLayout." />
      <item value="Returns the visibility of this view and all of its ancestors" />
      <item value="horizontal pixels consumed by the target's own scrolling operation" />
      <item value="vertical pixels consumed by the target's own scrolling operation" />
      <item value="Default constructor for instantiating Behaviors." />
      <item value="Default constructor for inflating Behaviors from layout. The Behavior will have * the opportunity to parse specially defined layout parameters. These parameters will * appear on the child view tag. *" />
      <item value="This is the legacy behavior * prior to N." />
      <item value="Returns displayable styled text from the provided HTML string. Any &amp;lt;img&amp;gt; tags in the * HTML will display as a generic replacement image which your program can then go through and * replace with real images. *" />
      <item value="consumed" />
      <item value="dy Unconsumed" />
      <item value="dx Unconsumed" />
      <item value="dx Consumed" />
      <item value="meaningfully" />
      <item value="Only show over-scroll effects if the content is large enough to meaningfully scroll." />
      <item value="Prefix" />
      <item value="campaigns" />
      <item value="marketing campaigns" />
      <item value="Indicates scrolling along the vertical axis." />
      <item value="Overrides the id of the inflated View with this v" />
      <item value="Overrides the id of the inflated View with this value" />
      <item value="awaken" />
      <item value="Compute the horizontal offset of the horizontal scrollbar's thumb within the horizontal * range. This value is used to compute the length of the thumb within the scrollbar's track." />
      <item value="inside Overlay" />
      <item value="Defines over-scrolling behavior. This property is used only if the View is scrollable. Over-scrolling is the ability for the user to receive feedback when attempting to scroll beyond meaningful content" />
      <item value="artical newlest" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="744" />
        <entry key="ENGLISH" value="881" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="6" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="FILIPINO" value="4" />
        <entry key="DUTCH" value="1" />
        <entry key="MALAY" value="2" />
        <entry key="TURKISH" value="4" />
        <entry key="SPANISH" value="4" />
        <entry key="ITALIAN" value="1" />
        <entry key="HINDI" value="2" />
        <entry key="INDONESIAN" value="5" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="showWordsOnStartup" value="true" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>