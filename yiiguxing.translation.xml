<application>
  <component name="AppStorage">
    <histories>
      <item value="are SQLite virtual table modules * that allows full-text searches to be performed on a set of documents" />
      <item value="products Fts" />
      <item value="on Delete" />
      <item value="child Columns" />
      <item value="parent Columns" />
      <item value="Comment" />
      <item value="foreign Keys" />
      <item value="The SQLite database is only created when it's accessed for the first time" />
      <item value="The SQLite database is only created when it's accessed for the first time." />
      <item value="Build the database. {@link Builder#build()} only sets up the database configuration and * creates a new instance of the database. * The SQLite database is only created when it's accessed for the first time." />
      <item value="Visible For Testing" />
      <item value="notify that the database was created and it's ready to be used" />
      <item value="VIRTUAL" />
      <item value="If you called this method multiple times before a main thread executed a posted task, only * the last value would be dispatched." />
      <item value="EXCLUSIVE" />
      <item value="Exclusive" />
      <item value="begin Transaction Non Exclusive" />
      <item value="Support SQ Lite Database" />
      <item value="Begins a transaction in EXCLUSIVE mode. * &lt;p&gt; * Transactions can be nested. * When the outer transaction is ended all of * the work done in that transaction and all of the nested transactions will be committed or * rolled back. The changes will be rolled back if any transaction is ended without being * marked as clean (by calling setTransactionSuccessful). Otherwise they will be committed. * &lt;/p&gt; * &lt;p&gt;Here is the standard idiom for transactions:" />
      <item value="Begins a transaction in EXCLUSIVE mode." />
      <item value="Generate the data for pre-population" />
      <item value="Generates data to pre-populate the database" />
      <item value="Save the user's query into the SavedStateHandle. // This ensures that we retain the value across process death // and is used as the input into the Transformations.switchMap above" />
      <item value="subscribe Ui" />
      <item value="espresso does not know how to wait for data binding's loop so we execute changes // sync." />
      <item value="are Contents The Same" />
      <item value="Repository handling the work with products and comments." />
      <item value="Grouping tasks like this avoids the effects of task starvation (e.g. disk reads don't wait behind * webservice requests)" />
      <item value="Global executor pools for the whole application. * &lt;p&gt; * Grouping tasks like this avoids the effects of task starvation (e.g. disk reads don't wait behind * webservice requests)." />
      <item value="Calory" />
      <item value="reserve" />
      <item value="WRITE TYPE NO RESPONSE" />
      <item value="Write characteristic without requiring a response by the remote device" />
      <item value="all Daos and Entities in that database will be able to * use it." />
      <item value="Repository Handler" />
      <item value="The closure of use to configure the build script classpath begin run." />
      <item value="The closure to use to configure the build script classpath begin run." />
      <item value="Shared file between builds so that they can all use the same dependencies and * maven repositories." />
      <item value="Copies the master versions.gradle file to each sample, to make them # compatible with Android Studio's &quot;Import sample&quot; feature." />
      <item value="This declaration is experimental and its usage should be marked with '@kotlin.ExperimentalUnsignedTypes' or '@OptIn(kotlin.ExperimentalUnsignedTypes::class)'" />
      <item value="There is more than one label with such a name in this scope" />
      <item value="挂起模式的falsh擦除函数" />
      <item value="Erasing flash data by start address and length with callback" />
      <item value="use data to replace all item in mData. this method is different [setList], * it doesn't change the [BaseQuickAdapter.data] reference * Deprecated, Please use [setList]" />
      <item value="server" />
      <item value="not permitted" />
      <item value="is Loading" />
      <item value="Loading" />
      <item value="Batc" />
      <item value="For example, Bluetooth has been turned on or off." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2150" />
        <entry key="ENGLISH" value="2240" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="8" />
        <entry key="GERMAN" value="3" />
        <entry key="FRENCH" value="8" />
        <entry key="FILIPINO" value="9" />
        <entry key="FINNISH" value="2" />
        <entry key="DUTCH" value="3" />
        <entry key="CZECH" value="2" />
        <entry key="ROMANIAN" value="3" />
        <entry key="MALAY" value="2" />
        <entry key="NORWEGIAN" value="4" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="TURKISH" value="5" />
        <entry key="SPANISH" value="6" />
        <entry key="ITALIAN" value="5" />
        <entry key="HINDI" value="6" />
        <entry key="INDONESIAN" value="8" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="showWordsOnStartup" value="true" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6953e2b0635b37a0" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>